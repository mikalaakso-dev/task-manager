name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Adjust if needed

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.PROJECTSECRETS }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

jobs:
  setup-infrastructure:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ env.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Terraform Init and Apply
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve

  deploy-app:
    runs-on: ubuntu-latest
    needs: setup-infrastructure
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Kubectl
      run: |
        echo "${{ env.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config

    - name: Deploy to GKE using Ansible
      run: |
        cd ansible
        ansible-playbook -i inventory playbook.yml

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: deploy-app
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/myapp:$GITHUB_SHA .

    - name: Push Docker image to GCR
      run: |
        echo ${{ env.GCP_SA_KEY }} | base64 --decode > gcp-key.json
        gcloud auth activate-service-account --key-file=gcp-key.json
        gcloud auth configure-docker
        docker push gcr.io/${{ env.PROJECT_ID }}/myapp:$GITHUB_SHA
